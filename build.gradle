buildscript {
	dependencies {
		classpath("org.flywaydb:flyway-database-postgresql:10.7.2")
	}
	dependencies {
		classpath 'org.postgresql:postgresql:42.7.4'
	}
}

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.flywaydb.flyway" version "10.7.2"
	id "org.jooq.jooq-codegen-gradle" version "3.19.11"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.jooq:jooq:3.19.11'
	implementation 'org.jooq:jooq-meta:3.19.11'
	implementation 'org.jooq:jooq-codegen:3.19.11'

	implementation 'ch.qos.logback:logback-classic:1.5.7'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/quo_digital_db'
	user = 'demo_user'
	password = 'demo_pass'
	locations = ['classpath:db/migration']
	cleanDisabled = false
}

jooq {
	version = '3.19'
	configuration {
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/quo_digital_db'
			user = 'demo_user'
			password = 'demo_pass'
		}
		generator {
			name = 'org.jooq.codegen.KotlinGenerator'
			database {
				name = 'org.jooq.meta.postgres.PostgresDatabase'
				inputSchema = 'public'
				includes = ".*"
				excludes = 'flyway_schema_history'
			}
			generate {
				relations = true
				records = true
				pojos = true
			}
			target {
				directory = 'src/main/jooq'
				packageName = 'com.example.quo_digital_demo.generated'
			}
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/kotlin', 'src/main/jooq']
		}
	}
}
